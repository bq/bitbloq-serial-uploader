/* global describe, it, expect, bitbloqSU */
'use strict';
(function() {

    describe('In Program module', function() {

        it('provides all methods in bitbloqSU.Program', function() {

            expect(bitbloqSU.Program).to.include.keys(
                'setBoard',
                'testBoard'
            );
            expect(Messages).to.include.keys(
                'program',
                'programMock'
            );

        });
        it('provides all methods in Messages', function() {

            expect(Messages).to.include.keys(
                'program',
                'programMock'
            );

        });

        /*        describe('i can set a board', function() {

                    it('port | board are required', function() {
                        expect(true).to.equal(true);
                    });

                    it('return connectionId with correct config', function() {
                        expect(true).to.equal(true);
                    });

                    it('bitbloqSU.Serial.connectionId is saved with correct config', function() {
                        expect(true).to.equal(true);
                    });

                    it('return undefined whin incorrect config', function() {
                        expect(true).to.equal(true);
                    });

                });*/


        // describe('when i send a program', function() {
        //     it('load OK for ZUM for blink_led_ZUM program', function() {
        //         var blink_led_ZUM = ':100000000C9461000C947E000C947E000C947E0095\r\n:100010000C947E000C947E000C947E000C947E0068\r\n:100020000C947E000C947E000C947E000C947E0058\r\n:100030000C947E000C947E000C947E000C947E0048\r\n:100040000C949D000C947E000C947E000C947E0019\r\n:100050000C947E000C947E000C947E000C947E0028\r\n:100060000C947E000C947E00000000002400270009\r\n:100070002A0000000000250028002B0000000000DE\r\n:1000800023002600290004040404040404040202DA\r\n:100090000202020203030303030301020408102007\r\n:1000A0004080010204081020010204081020000012\r\n:1000B0000007000201000003040600000000000029\r\n:1000C000000011241FBECFEFD8E0DEBFCDBF11E08E\r\n:1000D000A0E0B1E0EAE3F4E002C005900D92A030A8\r\n:1000E000B107D9F711E0A0E0B1E001C01D92A9303D\r\n:1000F000B107E1F70E940C020C9480000C94000000\r\n:10010000F8940C941B028DE060E00E94B80168EE48\r\n:1001100073E080E090E00E94E5008DE061E00E94E5\r\n:10012000B80168EE73E080E090E00E94E500089579\r\n:100130008DE061E00E94790108951F920F920FB641\r\n:100140000F9211242F933F938F939F93AF93BF935D\r\n:100150008091040190910501A0910601B0910701E1\r\n:10016000309108010196A11DB11D232F2D5F2D3760\r\n:1001700020F02D570196A11DB11D209308018093F9\r\n:10018000040190930501A0930601B09307018091AB\r\n:10019000000190910101A0910201B091030101962B\r\n:1001A000A11DB11D8093000190930101A093020154\r\n:1001B000B0930301BF91AF919F918F913F912F9188\r\n:1001C0000F900FBE0F901F9018959B01AC017FB749\r\n:1001D000F8948091000190910101A0910201B091E9\r\n:1001E000030166B5A89B05C06F3F19F00196A11DDC\r\n:1001F000B11D7FBFBA2FA92F982F8827860F911D79\r\n:10020000A11DB11D62E0880F991FAA1FBB1F6A952F\r\n:10021000D1F7BC012DC0FFB7F894809100019091F7\r\n:100220000101A0910201B0910301E6B5A89B05C0B0\r\n:10023000EF3F19F00196A11DB11DFFBFBA2FA92FE5\r\n:10024000982F88278E0F911DA11DB11DE2E0880F08\r\n:10025000991FAA1FBB1FEA95D1F7861B970B885ED3\r\n:100260009340C8F2215030404040504068517C4F8C\r\n:10027000211531054105510571F60895789484B52D\r\n:10028000826084BD84B5816084BD85B5826085BD92\r\n:1002900085B5816085BDEEE6F0E080818160808378\r\n:1002A000E1E8F0E01082808182608083808181605B\r\n:1002B0008083E0E8F0E0808181608083E1EBF0E022\r\n:1002C000808184608083E0EBF0E0808181608083C6\r\n:1002D000EAE7F0E0808184608083808182608083AF\r\n:1002E0008081816080838081806880831092C100DA\r\n:1002F0000895CF93DF93482F50E0CA0186569F4F51\r\n:10030000FC0134914A575F4FFA018491882369F1C7\r\n:1003100090E0880F991FFC01E859FF4FA591B49117\r\n:10032000FC01EE58FF4FC591D491662351F42FB7CD\r\n:10033000F8948C91932F909589238C9388818923AD\r\n:100340000BC0623061F42FB7F8948C91932F909585\r\n:1003500089238C938881832B88832FBF06C09FB706\r\n:10036000F8948C91832B8C939FBFDF91CF9108954C\r\n:10037000482F50E0CA0182559F4FFC012491CA01C9\r\n:1003800086569F4FFC0194914A575F4FFA01349172\r\n:10039000332309F440C0222351F1233071F024307B\r\n:1003A00028F42130A1F0223011F514C02630B1F02C\r\n:1003B0002730C1F02430D9F404C0809180008F77B9\r\n:1003C00003C0809180008F7D8093800010C084B531\r\n:1003D0008F7702C084B58F7D84BD09C08091B00045\r\n:1003E0008F7703C08091B0008F7D8093B000E32FA2\r\n:1003F000F0E0EE0FFF1FEE58FF4FA591B4912FB71D\r\n:10040000F894662321F48C919095892302C08C91F5\r\n:10041000892B8C932FBF0895CF93DF930E943E01C9\r\n:100420000E949800C0E0D0E00E9483002097E1F392\r\n:0A0430000E940000F9CFF894FFCFFE\r\n:00000001FF\r\n';
        //         var path = '/dev/ttyACM3';
        //         expect(bitbloqSU.Program.setBoard(Mocks.zoom.board).load(blink_led_ZUM, path)).to.equal(true);
        //     });
        // });


        // describe('when sendData', function() {
        //     it('resolves with both ACK', function() {
        //         expect(true).to.equal(true);
        //     });
        // });


    });

})();
